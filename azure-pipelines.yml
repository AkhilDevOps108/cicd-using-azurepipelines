trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  TF_IN_AUTOMATION: 'true'
  TERRAFORM_VERSION: '1.5.0'   # change if you want a different TF version

steps:
- task: TerraformInstaller@0
  displayName: 'Install Terraform'
  inputs:
    terraformVersion: '$(TERRAFORM_VERSION)'

- task: AzureCLI@2
  displayName: 'Azure CLI login and Terraform (using service connection akhil)'
  inputs:
    azureSubscription: 'akhil'         # your service connection name
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      set -euo pipefail
      echo "Azure account:"
      az account show --query "{name:name, id:id}" -o table

      echo "Terraform version:"
      terraform version

      # init - if you use a backend, make sure backend config is accessible
      terraform init -input=false

      # validate & fmt check (optional but recommended)
      terraform fmt -check || true
      terraform validate || true

      # plan
      terraform plan -out=tfplan -input=false

      # apply
      terraform apply -auto-approve tfplan

      # show outputs (useful to confirm)
      terraform output -json
